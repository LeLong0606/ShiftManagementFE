@page "/auths/login"
@page "/auths/register"
@using ShiftManagementFE.DTOs
@using ShiftManagementFE.Services
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>@(IsLogin ? "Đăng nhập" : "Đăng ký tài khoản mới")</h3>

@if (IsLogin)
{
    <EditForm Model="loginModel" OnValidSubmit="OnLoginSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Tên đăng nhập</label>
            <InputText class="form-control" @bind-Value="loginModel.Username" />
        </div>
        <div class="mb-3">
            <label class="form-label">Mật khẩu</label>
            <InputText class="form-control" type="password" @bind-Value="loginModel.Password" />
        </div>
        <button class="btn btn-primary" type="submit">Đăng nhập</button>
        <button class="btn btn-secondary" type="button" @onclick="OnCancel">Hủy</button>
    </EditForm>
}
else
{
    <EditForm Model="registerModel" OnValidSubmit="OnRegisterSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Tên đăng nhập</label>
            <InputText class="form-control" @bind-Value="registerModel.Username" />
        </div>
        <div class="mb-3">
            <label class="form-label">Mật khẩu</label>
            <InputText class="form-control" type="password" @bind-Value="registerModel.Password" />
        </div>
        <div class="mb-3">
            <label class="form-label">Họ tên</label>
            <InputText class="form-control" @bind-Value="registerModel.FullName" />
        </div>
        <div class="mb-3">
            <label class="form-label">Email</label>
            <InputText class="form-control" @bind-Value="registerModel.Email" />
        </div>
        <div class="mb-3">
            <label class="form-label">Số điện thoại</label>
            <InputText class="form-control" @bind-Value="registerModel.PhoneNumber" />
        </div>
        <div class="mb-3">
            <label class="form-label">Phòng ban (DepartmentID)</label>
            <InputNumber class="form-control" @bind-Value="registerModel.DepartmentID" />
        </div>
        <div class="mb-3">
            <label class="form-label">Cửa hàng (StoreID)</label>
            <InputNumber class="form-control" @bind-Value="registerModel.StoreID" />
        </div>
        <button class="btn btn-success" type="submit">Đăng ký</button>
        <button class="btn btn-secondary" type="button" @onclick="OnCancel">Hủy</button>
    </EditForm>
}

@if (!string.IsNullOrEmpty(Message))
{
    <div class="alert alert-info mt-2">@Message</div>
}

@code {
    bool IsLogin => Navigation.Uri.Contains("/login");

    LoginDto loginModel { get; set; } = new();
    RegisterDto registerModel { get; set; } = new();
    string Message { get; set; } = "";

    private async Task OnLoginSubmit()
    {
        var res = await AuthService.LoginAsync(loginModel);
        if (res.IsSuccess)
        {
            Message = "Đăng nhập thành công!";
            // Lưu token, chuyển hướng, v.v. ở đây nếu cần
        }
        else
        {
            Message = "Đăng nhập thất bại: " + res.Error;
        }
    }

    private async Task OnRegisterSubmit()
    {
        var res = await AuthService.RegisterAsync(registerModel);
        if (res.IsSuccess)
        {
            Message = "Đăng ký thành công! UserID: " + res.Data;
            // Có thể chuyển hướng về login
        }
        else
        {
            Message = "Đăng ký thất bại: " + res.Error;
        }
    }

    private void OnCancel()
    {
        Navigation.NavigateTo("/auths");
    }
}