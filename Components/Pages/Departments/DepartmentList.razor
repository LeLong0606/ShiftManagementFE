@page "/departments"
@using ShiftManagementFE.DTOs
@using ShiftManagementFE.Services
@inject DepartmentService DepartmentService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>Danh sách phòng ban</h3>

<button class="btn btn-primary mb-2" @onclick="OnAddClick">Thêm mới</button>

@if (errorMsg != null)
{
    <div class="alert alert-danger">@errorMsg</div>
}

@if (departments == null && errorMsg == null)
{
    <p>Đang tải...</p>
}
else if (departments != null)
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Tên phòng ban</th>
                <th>Cửa hàng</th>
                <th>Quản lý</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var d in departments)
            {
                <tr>
                    <td>@d.DepartmentID</td>
                    <td>@d.DepartmentName</td>
                    <td>@d.StoreName</td>
                    <td>@d.ManagerID</td>
                    <td>
                        <button class="btn btn-sm btn-warning" @onclick="() => OnEditClick(d.DepartmentID)">Sửa</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => OnDeleteClick(d.DepartmentID)">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<DepartmentDto>? departments;
    string? errorMsg;

    protected override async Task OnInitializedAsync()
    {
        await LoadDepartments();
    }

    private async Task LoadDepartments()
    {
        try
        {
            errorMsg = null;
            departments = await DepartmentService.GetDepartmentsAsync();
        }
        catch (Exception ex)
        {
            departments = null;
            errorMsg = "Không thể tải danh sách phòng ban: " + ex.Message;
        }
    }

    private void OnAddClick()
    {
        Navigation.NavigateTo("/departments/add");
    }

    private void OnEditClick(int id)
    {
        Navigation.NavigateTo($"/departments/edit/{id}");
    }

    private async Task OnDeleteClick(int id)
    {
        var confirm = await JS.InvokeAsync<bool>("confirm", $"Bạn có chắc muốn xóa phòng ban {id}?");
        if (!confirm) return;

        try
        {
            var result = await DepartmentService.DeleteDepartmentAsync(id);
            if (result.IsSuccess)
            {
                await LoadDepartments();
                await JS.InvokeVoidAsync("alert", "Xóa thành công!");
            }
            else
            {
                await JS.InvokeVoidAsync("alert", "Lỗi: " + result.Error);
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", "Lỗi khi xóa: " + ex.Message);
        }
    }
}